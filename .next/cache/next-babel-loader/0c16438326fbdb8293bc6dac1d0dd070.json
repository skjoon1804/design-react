{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/oj/Desktop/pluralsight/design-react/src/components/HOCs/withRequest.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useReducer } from 'react';\nimport axios from 'axios';\nimport requestReducer, { REQUEST_STATUS } from '../../reducers/request';\nimport { PUT_SUCCESS, PUT_FAILURE, GET_ALL_SUCCESS, GET_ALL_FAILURE } from '../../actions/request';\n\nconst withRequest = (baseUrl, routeName) => Component => () => {\n  const {\n    0: {\n      records,\n      status,\n      error\n    },\n    1: dispatch\n  } = useReducer(requestReducer, {\n    records: [],\n    status: REQUEST_STATUS.LOADING,\n    error: null\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`${baseUrl}/${routeName}`);\n        dispatch({\n          records: response.data,\n          type: GET_ALL_SUCCESS\n        });\n      } catch (e) {\n        dispatch({\n          error: e,\n          type: GET_ALL_FAILURE\n        });\n      }\n    };\n\n    fetchData();\n  }, [baseUrl, routeName]);\n  const props = {\n    records,\n    status,\n    error,\n    put: async record => {\n      try {\n        await axios.put(`${baseUrl}/${routeName}/${record.id}`, record);\n        dispatch({\n          type: PUT_SUCCESS,\n          record: record\n        });\n      } catch (e) {\n        dispatch({\n          type: PUT_FAILURE,\n          error: e\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 12\n  }, this);\n};\n\nexport default withRequest;","map":{"version":3,"sources":["/Users/oj/Desktop/pluralsight/design-react/src/components/HOCs/withRequest.js"],"names":["React","useEffect","useReducer","axios","requestReducer","REQUEST_STATUS","PUT_SUCCESS","PUT_FAILURE","GET_ALL_SUCCESS","GET_ALL_FAILURE","withRequest","baseUrl","routeName","Component","records","status","error","dispatch","LOADING","fetchData","response","get","data","type","e","props","put","record","id"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,UAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,IAAyBC,cAAzB,QAA+C,wBAA/C;AACA,SACIC,WADJ,EAEIC,WAFJ,EAGIC,eAHJ,EAIIC,eAJJ,QAKO,uBALP;;AAOA,MAAMC,WAAW,GAAG,CAACC,OAAD,EAAUC,SAAV,KAAyBC,SAAD,IAAe,MAAM;AAE7D,QAAM;AAAA,OAAC;AAACC,MAAAA,OAAD;AAAUC,MAAAA,MAAV;AAAkBC,MAAAA;AAAlB,KAAD;AAAA,OAA2BC;AAA3B,MAAuCf,UAAU,CAACE,cAAD,EAAiB;AACpEU,IAAAA,OAAO,EAAE,EAD2D;AAEpEC,IAAAA,MAAM,EAAEV,cAAc,CAACa,OAF6C;AAGpEF,IAAAA,KAAK,EAAE;AAH6D,GAAjB,CAAvD;AAMAf,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMkB,SAAS,GAAG,YAAY;AAC1B,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CAAW,GAAEV,OAAQ,IAAGC,SAAU,EAAlC,CAAvB;AACAK,QAAAA,QAAQ,CAAC;AACLH,UAAAA,OAAO,EAAEM,QAAQ,CAACE,IADb;AAELC,UAAAA,IAAI,EAAEf;AAFD,SAAD,CAAR;AAIH,OAND,CAME,OAAOgB,CAAP,EAAU;AACRP,QAAAA,QAAQ,CAAC;AACLD,UAAAA,KAAK,EAAEQ,CADF;AAELD,UAAAA,IAAI,EAAEd;AAFD,SAAD,CAAR;AAIH;AACJ,KAbD;;AAcAU,IAAAA,SAAS;AACZ,GAhBQ,EAgBN,CAACR,OAAD,EAAUC,SAAV,CAhBM,CAAT;AAkBA,QAAMa,KAAK,GAAG;AACVX,IAAAA,OADU;AAEVC,IAAAA,MAFU;AAGVC,IAAAA,KAHU;AAIVU,IAAAA,GAAG,EAAE,MAAOC,MAAP,IAAkB;AACnB,UAAI;AACA,cAAMxB,KAAK,CAACuB,GAAN,CAAW,GAAEf,OAAQ,IAAGC,SAAU,IAAGe,MAAM,CAACC,EAAG,EAA/C,EAAkDD,MAAlD,CAAN;AACAV,QAAAA,QAAQ,CAAC;AACLM,UAAAA,IAAI,EAAEjB,WADD;AAELqB,UAAAA,MAAM,EAAEA;AAFH,SAAD,CAAR;AAIH,OAND,CAME,OAAOH,CAAP,EAAU;AACRP,QAAAA,QAAQ,CAAC;AACLM,UAAAA,IAAI,EAAEhB,WADD;AAELS,UAAAA,KAAK,EAAEQ;AAFF,SAAD,CAAR;AAIH;AACJ;AAjBS,GAAd;AAoBA,sBAAO,QAAC,SAAD,oBAAeC,KAAf;AAAA;AAAA;AAAA;AAAA,UAAP;AAEH,CAhDD;;AAiDA,eAAef,WAAf","sourcesContent":["import React, {useEffect, useReducer} from 'react';\nimport axios from 'axios';\nimport requestReducer, { REQUEST_STATUS } from '../../reducers/request';\nimport {\n    PUT_SUCCESS,\n    PUT_FAILURE,\n    GET_ALL_SUCCESS,\n    GET_ALL_FAILURE,\n} from '../../actions/request';\n\nconst withRequest = (baseUrl, routeName) => (Component) => () => {\n\n    const [{records, status, error}, dispatch] = useReducer(requestReducer, {\n        records: [],\n        status: REQUEST_STATUS.LOADING,\n        error: null,\n    });\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await axios.get(`${baseUrl}/${routeName}`);\n                dispatch({\n                    records: response.data,\n                    type: GET_ALL_SUCCESS,\n                });\n            } catch (e) {\n                dispatch({\n                    error: e,\n                    type: GET_ALL_FAILURE,\n                });\n            }\n        }\n        fetchData();\n    }, [baseUrl, routeName ]);\n\n    const props = {\n        records,\n        status,\n        error,\n        put: async (record) => {\n            try {\n                await axios.put(`${baseUrl}/${routeName}/${record.id}`, record);\n                dispatch({\n                    type: PUT_SUCCESS,\n                    record: record,\n                });\n            } catch (e) {\n                dispatch({\n                    type: PUT_FAILURE,\n                    error: e,\n                });\n            }\n        }\n    }\n\n    return <Component {...props}></Component>;\n\n};\nexport default withRequest;"]},"metadata":{},"sourceType":"module"}