{"ast":null,"code":"import _toConsumableArray from \"/Users/oj/Desktop/pluralsight/design-react/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/oj/Desktop/pluralsight/design-react/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_ALL_FAILURE, GET_ALL_SUCCESS, PUT_FAILURE, PUT_SUCCESS } from '../actions/request';\nexport var REQUEST_STATUS = {\n  LOADING: 'loading',\n  SUCCESS: 'success',\n  ERROR: 'error'\n};\n\nvar requestReducer = function requestReducer(state, action) {\n  switch (action.type) {\n    case GET_ALL_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        status: REQUEST_STATUS.SUCCESS,\n        records: action.records\n      });\n\n    case GET_ALL_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        status: REQUEST_STATUS.ERROR,\n        error: action.error\n      });\n\n    case PUT_SUCCESS:\n      var records = state.records;\n      var record = action.record;\n      var recordIndex = records.map(function (rec) {\n        return rec.id;\n      }).indexOf(record.id);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        records: [].concat(_toConsumableArray(records.slice(0, recordIndex)), [record], _toConsumableArray(records.slice(recordIndex + 1)))\n      });\n\n    case PUT_FAILURE:\n      console.log('PUT_FAILURE: ');\n      console.log(error);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.error\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default requestReducer;","map":{"version":3,"sources":["/Users/oj/Desktop/pluralsight/design-react/src/reducers/request.js"],"names":["GET_ALL_FAILURE","GET_ALL_SUCCESS","PUT_FAILURE","PUT_SUCCESS","REQUEST_STATUS","LOADING","SUCCESS","ERROR","requestReducer","state","action","type","status","records","error","record","recordIndex","map","rec","id","indexOf","slice","console","log"],"mappings":";;;;;;;AAAA,SACIA,eADJ,EAEIC,eAFJ,EAGIC,WAHJ,EAIIC,WAJJ,QAKO,oBALP;AAOA,OAAO,IAAMC,cAAc,GAAG;AAC1BC,EAAAA,OAAO,EAAE,SADiB;AAE1BC,EAAAA,OAAO,EAAE,SAFiB;AAG1BC,EAAAA,KAAK,EAAE;AAHmB,CAAvB;;AAMP,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACtC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,eAAL;AACI,6CACOQ,KADP;AAEIG,QAAAA,MAAM,EAAER,cAAc,CAACE,OAF3B;AAGIO,QAAAA,OAAO,EAAEH,MAAM,CAACG;AAHpB;;AAKJ,SAAKb,eAAL;AACI,6CACOS,KADP;AAEIG,QAAAA,MAAM,EAAER,cAAc,CAACG,KAF3B;AAGIO,QAAAA,KAAK,EAAEJ,MAAM,CAACI;AAHlB;;AAKJ,SAAKX,WAAL;AAAA,UACYU,OADZ,GACwBJ,KADxB,CACYI,OADZ;AAAA,UAEYE,MAFZ,GAEuBL,MAFvB,CAEYK,MAFZ;AAGI,UAAMC,WAAW,GAAGH,OAAO,CAACI,GAAR,CAAY,UAACC,GAAD;AAAA,eAASA,GAAG,CAACC,EAAb;AAAA,OAAZ,EAA6BC,OAA7B,CAAqCL,MAAM,CAACI,EAA5C,CAApB;AACA,6CACOV,KADP;AAEII,QAAAA,OAAO,+BACAA,OAAO,CAACQ,KAAR,CAAc,CAAd,EAAiBL,WAAjB,CADA,IAEHD,MAFG,sBAGAF,OAAO,CAACQ,KAAR,CAAcL,WAAW,GAAG,CAA5B,CAHA;AAFX;;AAQJ,SAAKd,WAAL;AACIoB,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACA,6CACOL,KADP;AAEIK,QAAAA,KAAK,EAAEJ,MAAM,CAACI;AAFlB;;AAIJ;AACI,aAAOL,KAAP;AAjCR;AAmCH,CApCD;;AAqCA,eAAeD,cAAf","sourcesContent":["import {\n    GET_ALL_FAILURE,\n    GET_ALL_SUCCESS,\n    PUT_FAILURE,\n    PUT_SUCCESS,\n} from '../actions/request';\n\nexport const REQUEST_STATUS = {\n    LOADING: 'loading',\n    SUCCESS: 'success',\n    ERROR: 'error'\n};\n\nconst requestReducer = (state, action) => {\n    switch (action.type) {\n        case GET_ALL_SUCCESS:\n            return {\n                ...state,\n                status: REQUEST_STATUS.SUCCESS,\n                records: action.records,\n            };\n        case GET_ALL_FAILURE: \n            return {\n                ...state,\n                status: REQUEST_STATUS.ERROR,\n                error: action.error,\n            };\n        case PUT_SUCCESS:\n            const { records } = state;\n            const { record } = action;\n            const recordIndex = records.map((rec) => rec.id).indexOf(record.id);\n            return {\n                ...state,\n                records: [\n                    ...records.slice(0, recordIndex),\n                    record,\n                    ...records.slice(recordIndex + 1),\n                ],\n            };\n        case PUT_FAILURE:\n            console.log('PUT_FAILURE: ');\n            console.log(error);\n            return {\n                ...state,\n                error: action.error,\n            };\n        default:\n            return state;\n    }\n}\nexport default requestReducer;"]},"metadata":{},"sourceType":"module"}