{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/oj/Desktop/pluralsight/design-react/src/components/Speakers/Speakers.js\",\n    _this = this;\n\nimport React from 'react';\nimport withData from './withData';\n\nvar Speakers = function Speakers() {\n  var speakers = [{\n    imageSrc: 'speaker-component-1124',\n    name: 'Douglas Crockford',\n    id: 1124,\n    firstName: 'Douglas',\n    lastName: 'Crockford',\n    sat: true,\n    sun: false,\n    isFavorite: false,\n    bio: 'Douglas Crockford discovered the JSON Data Interchange Format. He is also the author of _JavaScript: The Good Parts_. He has been called a guru, but he is actually more of a mahatma.'\n  }, {\n    imageSrc: 'speaker-component-1530',\n    name: 'Tamara Baker',\n    id: 1530,\n    firstName: 'Tamara',\n    lastName: 'Baker',\n    sat: false,\n    sun: true,\n    isFavorite: true,\n    bio: 'Tammy has held a number of executive and management roles over the past 15 years, including VP engineering Roles at Molekule Inc., Cantaloupe Systems, E-Color, and Untangle Inc.'\n  }, {\n    imageSrc: 'speaker-component-10803',\n    name: 'Eugene Chuvyrov',\n    id: 10803,\n    firstName: 'Eugene',\n    lastName: 'Chuvyrov',\n    sat: true,\n    sun: false,\n    isFavorite: false,\n    bio: 'Eugene Chuvyrov is  a Senior Cloud Architect at Microsoft. He works directly with both startups and enterprises to enable their solutions in Microsoft cloud, and to make Azure better as a result of this work with partners.'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 \",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n        id: \"username\",\n        type: \"text\",\n        placeholder: \"Search by name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid md:grid-cols-2 lg:grid-cols-3 grid-cols-1 gap-12\",\n      children: speakers.map(function (_ref) {\n        var id = _ref.id,\n            firstName = _ref.firstName,\n            lastName = _ref.lastName,\n            bio = _ref.bio,\n            isFavorite = _ref.isFavorite;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rounded overflow-hidden shadow-lg p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-4 mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-bold text-lg col-span-3\",\n              children: \"\".concat(firstName, \" \").concat(lastName)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-end\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: isFavorite ? 'heartredbutton' : 'heartdarkbutton'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/speakers/speaker-\".concat(id, \".jpg\"),\n              alt: \"\".concat(firstName, \" \").concat(lastName)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-gray-600\",\n            children: bio.substr(0, 70) + '...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, _this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = Speakers;\nexport default Speakers;\n\nvar _c;\n\n$RefreshReg$(_c, \"Speakers\");","map":{"version":3,"sources":["/Users/oj/Desktop/pluralsight/design-react/src/components/Speakers/Speakers.js"],"names":["React","withData","Speakers","speakers","imageSrc","name","id","firstName","lastName","sat","sun","isFavorite","bio","map","substr"],"mappings":"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","sourcesContent":["import React from 'react'\nimport withData from './withData'\n\nconst Speakers = () => {\n    const speakers = [\n        {\n            imageSrc: 'speaker-component-1124',\n            name: 'Douglas Crockford',\n            id: 1124,\n            firstName: 'Douglas',\n            lastName: 'Crockford',\n            sat: true,\n            sun: false,\n            isFavorite: false,\n            bio:\n            'Douglas Crockford discovered the JSON Data Interchange Format. He is also the author of _JavaScript: The Good Parts_. He has been called a guru, but he is actually more of a mahatma.',\n        },\n        {\n            imageSrc: 'speaker-component-1530',\n            name: 'Tamara Baker',\n            id: 1530,\n            firstName: 'Tamara',\n            lastName: 'Baker',\n            sat: false,\n            sun: true,\n            isFavorite: true,\n            bio:\n            'Tammy has held a number of executive and management roles over the past 15 years, including VP engineering Roles at Molekule Inc., Cantaloupe Systems, E-Color, and Untangle Inc.',\n        },\n        {\n            imageSrc: 'speaker-component-10803',\n            name: 'Eugene Chuvyrov',\n            id: 10803,\n            firstName: 'Eugene',\n            lastName: 'Chuvyrov',\n            sat: true,\n            sun: false,\n            isFavorite: false,\n            bio:\n            'Eugene Chuvyrov is  a Senior Cloud Architect at Microsoft. He works directly with both startups and enterprises to enable their solutions in Microsoft cloud, and to make Azure better as a result of this work with partners.',\n        },\n    ];\n\n    return (\n        <div>\n        <div className=\"mb-6 \">\n          <input\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n            id=\"username\"\n            type=\"text\"\n            placeholder=\"Search by name\"\n          />\n        </div>\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 grid-cols-1 gap-12\">\n          {speakers.map(({ id, firstName, lastName, bio, isFavorite }) => (\n            <div className=\"rounded overflow-hidden shadow-lg p-6\" key={id}>\n              <div className=\"grid grid-cols-4 mb-6\">\n                <div className=\"font-bold text-lg col-span-3\">{`${firstName} ${lastName}`}</div>\n                <div className=\"flex justify-end\">\n                  <div\n                    className={isFavorite ? 'heartredbutton' : 'heartdarkbutton'}\n                  ></div>\n                </div>\n              </div>\n              <div className=\"mb-6\">\n                <img\n                  src={`/speakers/speaker-${id}.jpg`}\n                  alt={`${firstName} ${lastName}`}\n                />\n              </div>\n              <div className=\"text-gray-600\">{bio.substr(0, 70) + '...'}</div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n};\nexport default Speakers;"]},"metadata":{},"sourceType":"module"}