{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/oj/Desktop/pluralsight/design-react/src/components/Speakers/Speakers.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport withData from './withData';\nimport SpeakerSearchBar from '../SpeakerSearchBar/SpeakerSearchBar';\nimport Speaker from '../Speaker/Speaker';\n\nconst Speakers = () => {\n  const speakers = [{\n    imageSrc: 'speaker-component-1124',\n    name: 'Douglas Crockford',\n    id: 1124,\n    firstName: 'Douglas',\n    lastName: 'Crockford',\n    sat: true,\n    sun: false,\n    isFavorite: false,\n    bio: 'Douglas Crockford discovered the JSON Data Interchange Format. He is also the author of _JavaScript: The Good Parts_. He has been called a guru, but he is actually more of a mahatma.'\n  }, {\n    imageSrc: 'speaker-component-1530',\n    name: 'Tamara Baker',\n    id: 1530,\n    firstName: 'Tamara',\n    lastName: 'Baker',\n    sat: false,\n    sun: true,\n    isFavorite: true,\n    bio: 'Tammy has held a number of executive and management roles over the past 15 years, including VP engineering Roles at Molekule Inc., Cantaloupe Systems, E-Color, and Untangle Inc.'\n  }, {\n    imageSrc: 'speaker-component-10803',\n    name: 'Eugene Chuvyrov',\n    id: 10803,\n    firstName: 'Eugene',\n    lastName: 'Chuvyrov',\n    sat: true,\n    sun: false,\n    isFavorite: false,\n    bio: 'Eugene Chuvyrov is  a Senior Cloud Architect at Microsoft. He works directly with both startups and enterprises to enable their solutions in Microsoft cloud, and to make Azure better as a result of this work with partners.'\n  }];\n  const {\n    0: searchQuery,\n    1: setSearchQuery\n  } = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SpeakerSearchBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid md:grid-cols-2 lg:grid-cols-3 grid-cols-1 gap-12\",\n      children: speakers.map(speaker => /*#__PURE__*/_jsxDEV(Speaker, _objectSpread({}, speaker), speaker.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Speakers;","map":{"version":3,"sources":["/Users/oj/Desktop/pluralsight/design-react/src/components/Speakers/Speakers.js"],"names":["React","useState","withData","SpeakerSearchBar","Speaker","Speakers","speakers","imageSrc","name","id","firstName","lastName","sat","sun","isFavorite","bio","searchQuery","setSearchQuery","map","speaker"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,gBAAP,MAA6B,sCAA7B;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAMC,QAAQ,GAAG,CACb;AACIC,IAAAA,QAAQ,EAAE,wBADd;AAEIC,IAAAA,IAAI,EAAE,mBAFV;AAGIC,IAAAA,EAAE,EAAE,IAHR;AAIIC,IAAAA,SAAS,EAAE,SAJf;AAKIC,IAAAA,QAAQ,EAAE,WALd;AAMIC,IAAAA,GAAG,EAAE,IANT;AAOIC,IAAAA,GAAG,EAAE,KAPT;AAQIC,IAAAA,UAAU,EAAE,KARhB;AASIC,IAAAA,GAAG,EACH;AAVJ,GADa,EAab;AACIR,IAAAA,QAAQ,EAAE,wBADd;AAEIC,IAAAA,IAAI,EAAE,cAFV;AAGIC,IAAAA,EAAE,EAAE,IAHR;AAIIC,IAAAA,SAAS,EAAE,QAJf;AAKIC,IAAAA,QAAQ,EAAE,OALd;AAMIC,IAAAA,GAAG,EAAE,KANT;AAOIC,IAAAA,GAAG,EAAE,IAPT;AAQIC,IAAAA,UAAU,EAAE,IARhB;AASIC,IAAAA,GAAG,EACH;AAVJ,GAba,EAyBb;AACIR,IAAAA,QAAQ,EAAE,yBADd;AAEIC,IAAAA,IAAI,EAAE,iBAFV;AAGIC,IAAAA,EAAE,EAAE,KAHR;AAIIC,IAAAA,SAAS,EAAE,QAJf;AAKIC,IAAAA,QAAQ,EAAE,UALd;AAMIC,IAAAA,GAAG,EAAE,IANT;AAOIC,IAAAA,GAAG,EAAE,KAPT;AAQIC,IAAAA,UAAU,EAAE,KARhB;AASIC,IAAAA,GAAG,EACH;AAVJ,GAzBa,CAAjB;AAuCA,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgChB,QAAQ,CAAC,EAAD,CAA9C;AAEA,sBACI;AAAA,4BACI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,uDAAf;AAAA,gBACKK,QAAQ,CAACY,GAAT,CAAcC,OAAD,iBACV,QAAC,OAAD,oBAA8BA,OAA9B,GAAcA,OAAO,CAACV,EAAtB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CApDD;;AAqDA,eAAeJ,QAAf","sourcesContent":["import React, {useState} from 'react'\nimport withData from './withData'\nimport SpeakerSearchBar from '../SpeakerSearchBar/SpeakerSearchBar'\nimport Speaker from '../Speaker/Speaker'\n\nconst Speakers = () => {\n    const speakers = [\n        {\n            imageSrc: 'speaker-component-1124',\n            name: 'Douglas Crockford',\n            id: 1124,\n            firstName: 'Douglas',\n            lastName: 'Crockford',\n            sat: true,\n            sun: false,\n            isFavorite: false,\n            bio:\n            'Douglas Crockford discovered the JSON Data Interchange Format. He is also the author of _JavaScript: The Good Parts_. He has been called a guru, but he is actually more of a mahatma.',\n        },\n        {\n            imageSrc: 'speaker-component-1530',\n            name: 'Tamara Baker',\n            id: 1530,\n            firstName: 'Tamara',\n            lastName: 'Baker',\n            sat: false,\n            sun: true,\n            isFavorite: true,\n            bio:\n            'Tammy has held a number of executive and management roles over the past 15 years, including VP engineering Roles at Molekule Inc., Cantaloupe Systems, E-Color, and Untangle Inc.',\n        },\n        {\n            imageSrc: 'speaker-component-10803',\n            name: 'Eugene Chuvyrov',\n            id: 10803,\n            firstName: 'Eugene',\n            lastName: 'Chuvyrov',\n            sat: true,\n            sun: false,\n            isFavorite: false,\n            bio:\n            'Eugene Chuvyrov is  a Senior Cloud Architect at Microsoft. He works directly with both startups and enterprises to enable their solutions in Microsoft cloud, and to make Azure better as a result of this work with partners.',\n        },\n    ];\n\n    const [searchQuery, setSearchQuery] = useState(\"\");\n\n    return (\n        <div>\n            <SpeakerSearchBar />\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 grid-cols-1 gap-12\">\n                {speakers.map((speaker) => (\n                    <Speaker key={speaker.id} {...speaker} />\n                ))}\n            </div>\n        </div>\n    );\n};\nexport default Speakers;"]},"metadata":{},"sourceType":"module"}